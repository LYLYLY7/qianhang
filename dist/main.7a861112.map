{"version":3,"sources":["main.js"],"names":["$siteList","$","$lastLi","find","x","localStorage","getItem","xObject","JSON","parse","hashMap","logo","url","simplifyUrl","replace","render","remove","forEach","node","index","$li","insertBefore","on","window","open","e","stopPropagation","splice","prompt","alert","indexOf","push","onbeforeunload","string","stringify","setItem","document","console","log","key","i","length","toLowerCase"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;;AAEA,IAAMA,YAAYC,EAAE,WAAF,CAAlB;AACA,IAAMC,UAAUF,UAAUG,IAAV,CAAe,SAAf,CAAhB;AACA,IAAMC,IAAIC,aAAaC,OAAb,CAAqB,GAArB,CAAV;AACA,IAAMC,UAAUC,KAAKC,KAAL,CAAWL,CAAX,CAAhB;AACA;;AAEA,IAAMM,UAAUH,WAAW;AACvB;AACA;AACA,EAAEI,MAAM,GAAR,EAAaC,KAAK,kBAAlB,EAHuB,EAIvB,EAAED,MAAM,GAAR,EAAaC,KAAK,qBAAlB,EAJuB,EAKvB,EAAED,MAAM,GAAR,EAAaC,KAAK,oBAAlB,EALuB,CAA3B;AAOA,IAAMC,cAAc,SAAdA,WAAc,CAACD,GAAD,EAAS;AAAC;AAC1B,WAAOA,IAAIE,OAAJ,CAAY,UAAZ,EAAwB,EAAxB,EACFA,OADE,CACM,SADN,EACiB,EADjB,EAEFA,OAFE,CAEM,MAFN,EAEc,EAFd,EAGFA,OAHE,CAGM,MAHN,EAGc,EAHd,CAAP;AAIA;AACH,CAND;AAOA,IAAMC,SAAS,SAATA,MAAS,GAAM;AACjBf,cAAUG,IAAV,kBAAgCa,MAAhC;AACAN,YAAQO,OAAR,CAAgB,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAC7B;AACA;AACA,YAAMC,MAAMnB,kFAEiBiB,KAAKP,IAFtB,mDAGiBE,YAAYK,KAAKN,GAAjB,CAHjB,gPAUPS,YAVO,CAUMnB,OAVN,CAAZ;AAWAkB,YAAIE,EAAJ,CAAO,OAAP,EAAgB,YAAM;AAClBC,mBAAOC,IAAP,CAAYN,KAAKN,GAAjB,EADkB,CACG;AACxB,SAFD;AAGAQ,YAAIE,EAAJ,CAAO,OAAP,EAAgB,QAAhB,EAA0B,UAACG,CAAD,EAAO;AAC7B;AACAA,cAAEC,eAAF,GAF6B,CAET;AACpBhB,oBAAQiB,MAAR,CAAeR,KAAf,EAAsB,CAAtB,EAH6B,CAGJ;AACzBJ,qBAJ6B,CAIpB;AACZ,SALD;AAMH,KAvBD;AAwBH,CA1BD;;AA4BAA;;AAEAd,EAAE,YAAF,EACKqB,EADL,CACQ,OADR,EACiB,YAAM;AACf,QAAIV,MAAMW,OAAOK,MAAP,CAAc,YAAd,CAAV;AACA,QAAI,CAAChB,GAAL,EAAU;AACNiB,cAAM,OAAN;AACA,eAAO,IAAP;AACH,KAHD,MAGO,IAAIjB,IAAIkB,OAAJ,CAAY,MAAZ,MAAwB,CAA5B,EAA+B;AAClC;AACA;AACAlB,cAAM,aAAaA,GAAnB;AACH;AACDF,YAAQqB,IAAR,CAAa;AACTpB,cAAME,YAAYD,GAAZ,EAAiB,CAAjB,CADG;AAETA,aAAKA;AAFI,KAAb;AAIAG;AACH,CAhBL;;AAkBAQ,OAAOS,cAAP,GAAwB,YAAM;AAC1B,QAAMC,SAASzB,KAAK0B,SAAL,CAAexB,OAAf,CAAf;AACAL,iBAAa8B,OAAb,CAAqB,GAArB,EAA0BF,MAA1B;AACA;AACH,CAJD;AAKAhC,EAAEmC,QAAF,EAAYd,EAAZ,CAAe,UAAf,EAA2B,UAACG,CAAD,EAAO;AAC9BY,YAAQC,GAAR,CAAYb,EAAEc,GAAd;AACA;AAF8B,QAGtBA,GAHsB,GAGdd,CAHc,CAGtBc,GAHsB,EAGX;;AACnB,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI9B,QAAQ+B,MAA5B,EAAoCD,GAApC,EAAyC;AACrC,YAAI9B,QAAQ8B,CAAR,EAAW7B,IAAX,CAAgB+B,WAAhB,OAAkCH,GAAtC,EAA2C;AACvChB,mBAAOC,IAAP,CAAYd,QAAQ8B,CAAR,EAAW5B,GAAvB;AACH;AACJ;AACJ,CATD;AAUA","file":"main.7a861112.map","sourceRoot":"..\\src","sourcesContent":["// console.log(jQuery)  测试（不提示错误就是成功）\r\n// console.log($)\r\n\r\nconst $siteList = $('.siteList')\r\nconst $lastLi = $siteList.find('li.last')\r\nconst x = localStorage.getItem('x')\r\nconst xObject = JSON.parse(x)\r\n//parse将字符串变成对象\r\n\r\nconst hashMap = xObject || [\r\n    //浏览器控制台，用parcel会加一个作用域，使得hashMap没有被定义。\r\n    //解决方式： window.hashMap = []\r\n    { logo: 'A', url: 'https://acfun.cn' },\r\n    { logo: 'B', url: 'https://bilbili.com' },\r\n    { logo: 'G', url: 'https://google.com' },\r\n]\r\nconst simplifyUrl = (url) => {//删除url里面的https://www.\r\n    return url.replace('https://', '')\r\n        .replace('http://', '')\r\n        .replace('www.', '')\r\n        .replace(/\\/.*/, '')\r\n    //正则表达式 表示删除以/开头的内容\r\n}\r\nconst render = () => {\r\n    $siteList.find(`li:not(.last)`).remove()\r\n    hashMap.forEach((node, index) => {\r\n        // console.log(index)\r\n        //node节点  index参数\r\n        const $li = $(`<li> \r\n             <div class=\"site\">\r\n                 <div class=\"logo\">${node.logo}</div>\r\n                 <div class=\"link\">${simplifyUrl(node.url)}</div>\r\n                 <div class='close'>\r\n                    <svg class=\"icon\">\r\n                        <use xlink:href=\"#icon-close\"></use>\r\n                    </svg>\r\n                </div>\r\n             </div>\r\n     </li>`).insertBefore($lastLi)\r\n        $li.on('click', () => {\r\n            window.open(node.url)//打开一个地址为url的新页面，代替a标签\r\n        })\r\n        $li.on('click', '.close', (e) => {\r\n            // console.log('这里')\r\n            e.stopPropagation() //阻止冒泡\r\n            hashMap.splice(index, 1) //删除索引为index的元素\r\n            render() //重新渲染一次\r\n        })\r\n    })\r\n}\r\n\r\nrender()\r\n\r\n$('.addButton')\r\n    .on('click', () => {\r\n        let url = window.prompt('请问你要添加的网址是')\r\n        if (!url) {\r\n            alert('请输入网址')\r\n            return null\r\n        } else if (url.indexOf('http') !== 0) {\r\n            //indexOf返回数组中指定字符出现的次数\r\n            //判断url是否含有http\r\n            url = `https://` + url\r\n        }\r\n        hashMap.push({\r\n            logo: simplifyUrl(url)[0],\r\n            url: url\r\n        })\r\n        render()\r\n    })\r\n\r\nwindow.onbeforeunload = () => {\r\n    const string = JSON.stringify(hashMap)\r\n    localStorage.setItem('x', string)\r\n    //在本地设置一个变量x存的就是string\r\n}\r\n$(document).on('keypress', (e) => {\r\n    console.log(e.key)\r\n    // const key = e.key\r\n    const { key } = e  //上面语句的另一种写法\r\n    for (let i = 0; i < hashMap.length; i++) {\r\n        if (hashMap[i].logo.toLowerCase() === key) {\r\n            window.open(hashMap[i].url)\r\n        }\r\n    }\r\n})\r\n// document.addEventListener()"]}